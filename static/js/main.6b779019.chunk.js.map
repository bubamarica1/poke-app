{"version":3,"sources":["components/layout/NavBar.js","components/pokemon/Pokemon.js","components/pokemon/PokemonList.js","components/layout/DashBoard.js","components/pokemon/Pokemonstr.js","App.js","serviceWorker.js","index.js"],"names":["NavBar","className","Component","Card","styled","div","StyledLink","Link","Sprite","img","Pokemon","state","name","imageUrl","index","imageLoading","toManyRequests","this","props","url","split","length","setState","to","onLoad","onError","src","PokemonList","pokemon","axios","get","res","data","map","key","DashBoard","TYPE_COLORS","bug","dark","dargon","electric","fairy","fighting","fire","flying","ghost","grass","ground","ice","normal","poison","psychic","rock","steel","water","Pokemonstr","types","description","stats","hp","attack","defense","speed","specialAttack","specialDefense","abilities","moves","evolution","match","params","pokemonUrl","pokemonEvolutionUrl","pokemonRes","x","sprites","front_default","chain","evolves_to","species","stat","type","ability","toLowerCase","s","charAt","toUpperCase","substring","join","move","style","backgroundColor","color","alt","App","exact","path","component","Dashboard","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.6b779019.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\n\n\n\nexport default class NavBar extends Component {\n    render () {\n        return (\n            <div>\n                <nav className='navbar navbar-expand-md navbar-dark bg-dark fixed-top'>\n                    <a className='navbar-brand col-sm-3 col-md-2 mr-0 align-items-center'>POKE-APP</a>\n                </nav> \n            </div>\n        )\n    }\n}\n\n","import React, { Component } from 'react';\nimport {Link} from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst Card = styled.div`\nbox-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24);\ntransition: all 0.3s cubic-bezier(0.25, 0.8, 0.25, 1);\n&:hover {\n    box-shadow: 0 14px 28px rgba(0, 0, 0, 0.25), 0 10px 10px rgba(0, 0, 0, 0.22);\n}\n-moz-user-select:none;\n-website-user-select: none;\n-o-user-select:none;\n`;\nconst StyledLink = styled(Link)`\ntext-decoration: none;\ncolor: black;\n&:focus,\n&:hover,\n&:visited,\n&link,\n&active {\n    text-decoration: none;\n}\n`;\nconst Sprite = styled.img`\nwidth : 5rem;\nheight: 5rem;\n`;\nexport default class Pokemon extends Component {\n    state = {\n        name : '',\n        imageUrl: '',\n        index:'',\n        imageLoading: true,\n        toManyRequests: false\n    };\n    componentDidMount(){\n        const name = this.props.name;\n        const url=this.props.url;\n        const index = url.split(`/`)[url.split(`/`).length - 2];\n        const imageUrl = `https://github.com/PokeAPI/sprites/blob/master/sprites/pokemon/${index}.png?raw=true`;\n       this.setState({\n           name,\n           imageUrl,\n           index\n       });\n    \n    }\n    render () {\n        \n        return ( \n            <div className='col-md-3 col-sm-6 mb-5 align-items-center'>\n                <StyledLink to={`pokemonstr/${this.state.index}`}>\n            <Card className='card text-center '>\n                <h5 className='card-header'>\n              PICK ME\n                </h5>\n                <Sprite\n                className='card-img-top rounded mx-auto mt-2' \n                onLoad={()=> this.setState({imageLoading:false})}\n                onError={() => this.setState({toManyRequests : true})}\n                src={this.state.imageUrl} \n                />\n                <div className='card-body mx-auto'>\n                </div>\n            \n            </Card>\n            </StyledLink>\n            </div>)\n       \n    }\n}","import React, { Component } from 'react';\nimport Pokemon from './Pokemon';\nimport axios from 'axios';\n\n\n\nexport default class PokemonList extends Component {\n    state = {\n        url : 'https://pokeapi.co/api/v2/pokemon/',\n        pokemon: null\n\n    };\n    \n\n  async componentDidMount() {\n        const res = await axios.get(this.state.url);\n        this.setState({pokemon : res.data['results']});\n    }\n    render () {\n        return (\n            <>\n            {this.state.pokemon ? (\n                     <div className='row'>\n                     {this.state.pokemon.map(pokemon => (\n                         <Pokemon \n                         key={pokemon.name}\n                         name={pokemon.name}\n                         url={pokemon.url} />\n                     ))}\n                  </div>)\n             : (<h1>Loading!</h1>)}\n            \n            </>\n       );\n    }\n}","import React, { Component } from 'react';\n import PokemonList from '../pokemon/PokemonList';\n\n export default class DashBoard extends Component {\n     render() {\n         return (\n             <div className='row'>\n                 <div className='col'>\n                     <PokemonList />\n                 </div>\n             </div>\n         )\n     }\n }","import React, { Component } from 'react';\nimport axios from 'axios';\n\nconst TYPE_COLORS= {\n    bug: 'B1C12E',\n    dark: '4F3A2D',\n    dargon: '755EDF',\n    electric: 'FCBC17',\n    fairy: 'F4B1F4',\n    fighting: '823551D',\n    fire: 'E73B0C',\n    flying: 'A3B3F7',\n    ghost: '6060B2',\n    grass: '74C236',\n    ground: 'D3B357',\n    ice: 'A3E7FD',\n    normal: 'C8C4BC',\n    poison: '934594',\n    psychic:'ED4882',\n    rock:'B9A156',\n    steel:'B5B5C3',\n    water:'3295F6'\n}\n\nexport default class Pokemonstr extends Component {\n    state ={\n        name: '',\n        index: '',\n        imageUrl: '',\n        types: [],\n        description: '',\n        stats: {\n            hp: '',\n            attack: '',\n            defense:'',\n            speed: '',\n            specialAttack: '',\n            specialDefense: ''\n        },\n        abilities:'',\n        moves:'',\n        to:'',\n        evolution:''\n    };\n    async componentDidMount() {\n        const {index} = this.props.match.params;\n\n        const pokemonUrl = `https://pokeapi.co/api/v2/pokemon/${index}/`;\n \n        const pokemonEvolutionUrl = `https://pokeapi.co/api/v2/evolution-chain/${index}/`;\n\n        const pokemonRes = await axios.get(pokemonUrl);\n        const x = await axios.get(pokemonEvolutionUrl);\n        const name= pokemonRes.data.name;\n        const imageUrl = pokemonRes.data.sprites.front_default;\n        let {hp,attack, defense, speed, specialAttack, specialDefense}= '';\n\n\n        let evolution = x.data.chain.evolves_to[0].evolves_to[0].species.name;\n       \n        pokemonRes.data.stats.map(stat => {\n            switch (stat.stat.name) {\n                case 'hp':\n                    hp=stat['base_stat'];\n                    break;\n                    case 'attack':\n                        attack=stat['base_stat'];\n                        break;\n                        case 'defense':\n                            defense=stat['base_stat'];\n                            break;\n                            case 'speed':\n                                speed=stat['base_stat'];\n                                break;\n                                case 'specialAttack':\n                                    specialAttack=stat['base_stat'];\n                                    break;\n                                    case 'specialDefense':\n                                        specialDefense=stat['base_stat'];\n                                        break;\n                                        default: break;\n\n            }\n        })\n        const types = pokemonRes.data.types.map(type => type.type.name);\n        const abilities = pokemonRes.data.abilities.map(ability => {\n            return ability.ability.name\n            .toLowerCase()\n            .split('-')\n            .map(s =>s.charAt(0).toUpperCase() + s.substring(1))\n            .join(' ');\n        });\n        \n        const moves = pokemonRes.data.moves.map(move => {\n            return move.move.name\n            .toLowerCase()\n            .split('-')\n            .map(s =>s.charAt(0).toUpperCase() + s.substring(1))\n            .join(' ');\n        });\n        \n        const to=moves[0]\n        \n        this.setState({\n            name,\n            imageUrl,\n            index,\n            types,\n            stats : {\n                hp, attack, defense, speed, specialAttack, specialDefense\n            },\n            abilities,\n            moves,\n            evolution,\n            to\n        });\n        \n    }\n    \n//DRUGI DEO\n\n\n    render () {\n        return <div className='col'>\n            <div className='card border-info'>\n                <div className='card-header text-info'>\n                    <div className='row'>\n                        <div className='col-5'>\n                           <h5>{this.state.index}</h5> \n                        </div>\n                        <div className='col-7'>\n                            <div className='float-right'>\n                                {this.state.types.map(type => (\n                                 <span \n                                 key={type}\n                                 className='badge badge-primary badge-pill mr-1'\n                                 style={{\n                                     backgroundColor: `#${TYPE_COLORS[type]}`,\n                                     color: 'white'\n                                 }}\n                                 >\n                                     {type}\n                                 </span>\n                                ))}\n\n                            </div>\n                        </div>\n                    </div>\n\n                </div>\n                    <div className='text-info  card-body'>\n                       <div className='row align-items-center'>\n                            <div className='col-md-3'>\n                                 <img src={this.state.imageUrl}\n                                 className='card-img-top rounded mx-auto mt-2' alt=''\n                                 />\n                            </div>\n                            <div className='col-md-9'>\n                                <h4><strong>{this.state.name\n                                .toLowerCase()\n                                .split(' ')\n                                .map (s=> s.charAt(0).toUpperCase()+s.substring(1))\n                                .join(' ')}</strong></h4>\n                                \n                                <ul className=\"d-flex list-group\">\n  <li className=\"list-group-item d-inline-flex justify-content-between align-items-center\"><strong>HP:</strong>\n    <span className=\"badge badge badge-info badge-pill\">{this.state.stats.hp}</span>\n  </li>\n  <li className=\"list-group-item d-inline-flex justify-content-between align-items-center\"><strong>Attack:</strong>\n    \n    <span className=\"badge badge badge-info badge-pill\">{this.state.stats.attack}</span>\n  </li>\n  <li className=\"list-group-item d-inline-flex justify-content-between align-items-center\"><strong>Defense:</strong>\n    \n    <span className=\"badge badge badge-info badge-pill\">{this.state.stats.defense}</span>\n  </li>\n  <li className=\"list-group-item d-inline-flex justify-content-between align-items-center\"><strong>Speed:</strong>\n    \n    <span className=\"badge badge badge-info badge-pill\">{this.state.stats.speed}</span>\n  </li>\n  <li className=\"list-group-item d-inline-flex justify-content-between align-items-center\"><strong>Move:</strong>\n   \n    <span className=\"badge badge badge-info badge-pill\">{this.state.to}</span>\n  </li>\n  <li className=\"list-group-item d-flex justify-content-between align-items-center\"><strong>Abilities:</strong>\n   \n    <span className=\"badge badge badge-info badge-pill\">{this.state.abilities}</span>\n  </li>\n  <li className=\"list-group-item d-flex justify-content-between align-items-center\"><strong>Evolution:</strong>\n       \n    <span className=\"badge badge badge-info badge-pill\">{this.state.evolution.toLowerCase()\n                                .split(' ')\n                                .map (s=> s.charAt(0).toUpperCase()+s.substring(1))\n                                .join(' ')}</span>\n  </li>\n</ul>\n\n                                \n                            </div>\n                       </div>\n                    </div>\n            </div> \n            \n        </div>\n    }\n}","import React, {Component} from 'react';\nimport {HashRouter as Router, Route, Switch} from 'react-router-dom'\nimport './App.css';\nimport NavBar from './components/layout/NavBar';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Dashboard from './components/layout/DashBoard';\nimport Pokemonstr from './components/pokemon/Pokemonstr';\nclass App extends Component {\n  render () {\n    \n    return ( \n    <Router>\n      <div className='App'> \n    <NavBar className='navic' />\n    <div className='container'>\n      <Switch>\n        <Route exact path='/' component={Dashboard}/>\n        <Route exact path='/pokemonstr/:index' component={Pokemonstr} />\n      </Switch>\n    </div>\n    </div> </Router>);\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}